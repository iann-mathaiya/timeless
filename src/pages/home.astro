---
import { format } from "date-fns";
import { auth } from "../lib/auth";
import { actions } from "astro:actions";
import type { Post } from "@/db/schema";
import AppLayout from "@/layouts/AppLayout.astro";

const authDetails = await auth.api.getSession({
    headers: Astro.request.headers,
});

if (!authDetails) {
    return Astro.redirect("/join");
}

const { data, error } = await Astro.callAction(actions.posts.getPosts, {
    userId: authDetails.user.id,
});

const updatedPosts: Post[] = [];

if (data?.success) {
    for (const post of data.postData) {
        const media = post.media as string[];
        const postMediaURLs = await Promise.all(
            media.map(async (fileName) => {
                const { data: URLsData, error } = await Astro.callAction(
                    actions.media.getSignedUrl,
                    { key: fileName },
                );
                return URLsData?.success ? URLsData.signedUrl : fileName;
            }),
        );

        updatedPosts.push({ ...post, media: postMediaURLs });
    }
}
---

<AppLayout title="Home">
    <section class="py-4 pl-4 sm:pl-0 mx-auto w-full max-w-screen-lg">
        {
            updatedPosts.map((post) => (
                <div class="mt-10 first:mt-0 sm:flex gap-3">
                    <div class="hidden sm:block">
                        <p class="mt-[3.77rem] w-14 text-end text-xs text-gray-600">
                            {format(post.createdAt, "p")}
                        </p>
                    </div>
                    <div>
                        <span class="text-xs text-gray-600">
                            {format(post.createdAt, "EEEE, do LLL yyyy")}
                        </span>
                        <h2 class="text-2xl text-gray-900 font-medium">
                            {String(post.title).charAt(0).toUpperCase() +
                                String(post.title).slice(1)}
                        </h2>
                        <p class="mt-0.5 text-sm text-gray-600">
                            {post.description}
                        </p>

                        <div class="mt-2 flex flex-row items-center gap-2">
                            {(post.media as string[]).map((media: string) => (
                                <img
                                    src={media}
                                    class="w-11/12 sm:w-96 rounded-xl"
                                    alt={`${post.title} cover image`}
                                />
                            ))}
                        </div>

                        <p class="mt-1.5 pl-2 sm:hidden text-xs text-gray-600">
                            {format(post.createdAt, "p")}
                        </p>
                    </div>
                </div>
            ))
        }
    </section>
</AppLayout>

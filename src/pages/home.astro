---
import { format } from "date-fns";
import { actions } from "astro:actions";
import type { Post } from "@/db/schema";
import AppLayout from "@/layouts/AppLayout.astro";
import type { Media, UploadedFiles } from "@/lib/types";
import MoreActions from "@/components/more-actions";

const { user, session } = Astro.locals;

if (!user) {
	return Astro.redirect("/join");
}

const { data, error } = await Astro.callAction(actions.posts.getPosts, {
    userId: user.id,
});

const updatedPosts: Post[] = [];

if (data?.success) {
    for (const post of data.postData) {
        const media = post.media as UploadedFiles[];

        const postMediaURLs = await Promise.all(
            media.map(async (fileData) => {
                const { data: URLsData, error } = await Astro.callAction(
                    actions.media.getSignedUrl,
                    { key: fileData.fileName },
                );
                if (URLsData?.success) {
                    return {
                        mediaURL: URLsData.signedUrl,
                        fileType: fileData.fileType,
                    };
                }
            }),
        );

        updatedPosts.push({ ...post, media: postMediaURLs });
    }
}

const timeline = updatedPosts.reduce(
    (acc, post) => {
        const date = (post.createdAt).toISOString().split("T")[0]  // Extract the date portion
        if (!acc[date]) {
            acc[date] = [];
        }
        acc[date].push(post);
        return acc;
    },
    {} as Record<string, typeof updatedPosts>,
);

const timelineEntries = Object.entries(timeline).map(([date, posts]) => ({
    createdAt: date,
    posts,
}));
---

<AppLayout title="Home">
    <section
        class="mx-auto w-full max-w-screen-lg xl:overflow-visible"
    >
        {
            timelineEntries.map((entry) => (
                <div class="first:mt-0 mt-4 first:pt-0 pt-4 lg:border-t first:border-t-transparent border-t-gray-200">
                    <h1 class="px-[17px] lg:ml-[4.86rem] text-xl text-gray-900 font-medium">
                        {parseInt(entry.createdAt) === new Date().getFullYear()
                            ? format(entry.createdAt, "EEEE MMMM do")
                            : format(entry.createdAt, "PPPP")}
                    </h1>

                    {entry.posts.map((post) => (
                        <div class="mt-4 flex flex-col lg:flex-row lg:gap-4">
                            <span class="px-[17px] w-fit lg:mt-[1.7rem] text-xs text-gray-600 lg:text-end">
                                {format(post.createdAt, "p")}
                            </span>

                            <div>
                                <div class="px-[17px] flex items-center justify-between">
                                    <h2 class="text-base text-gray-900 font-medium">
                                        {String(post.title).charAt(0).toUpperCase() +String(post.title).slice(1)}
                                    </h2>

                                    <MoreActions postId={post.id} client:load />
                                </div>
                                <p class="px-[17px] text-sm text-gray-600 whitespace-pre-line">
                                    {post.description}
                                </p>

                                <div class="mt-1.5 px-[17px] w-full flex items-center gap-1.5 lg:gap-2.5 overflow-x-auto xl:overflow-visible">
                                    {(post.media as Media[]).map(
                                        (media: Media) =>
                                            media.fileType === "video/mp4" ? (
                                                <video class="w-full sm:w-80 aspect-square rounded-lg lg:rounded-xl" controls>
                                                    <source src={media.mediaURL} type="video/mp4" />
                                                    <track src="captions_en.vtt" kind="captions" srclang="en" label="english_captions" />
                                                </video>
                                            ) : (
                                                <img
                                                    class="w-full sm:w-80 aspect-square object-cover object-center rounded-lg lg:rounded-xl"
                                                    src={media.mediaURL}
                                                    alt={`${post.title} media`}
                                                />
                                            ),
                                    )}
                                </div>
                            </div>
                        </div>
                    ))}
                </div>
            ))
        }
    </section>
</AppLayout>

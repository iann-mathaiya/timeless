---
import { actions } from "astro:actions";
import { auth } from "../lib/auth";
import AppLayout from "@/layouts/AppLayout.astro";
import type { Post } from "@/db/schema";

const authDetails = await auth.api.getSession({
    headers: Astro.request.headers,
});

if (!authDetails) {
    return Astro.redirect("/join");
}

const { data, error } = await Astro.callAction(actions.posts.getPosts, {
    userId: authDetails.user.id,
});

const mediaURLs: string[] = [];
let updatedPosts: Post[] = []

if (data?.success) {
    for (const post of data.postData) {
        const media = post.media as string[];

        for (const fileName of media) {
            const { data: URLsData, error } = await Astro.callAction(
                actions.media.getSignedUrl,
                { key: fileName },
            );
            if (URLsData?.success) {
                mediaURLs.push(URLsData.signedUrl);
            }
        }
    }

    updatedPosts = data?.postData.map((post, index) => ({
      ...post,
      media: mediaURLs[index] ? [mediaURLs[index]] : post.media,
    }));
}

---

<AppLayout title="Home">
    <section class="mt-4">
        <pre>
            {JSON.stringify(updatedPosts, null, 2)}
        </pre>

        {updatedPosts.map((post) => <div />)}

    </section>
</AppLayout>
